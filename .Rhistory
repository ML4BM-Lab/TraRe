library(TraRe)
?TraRe
?`TraRe-package`
devtools::load_all(".")
library(TraRe)
?cor
?dopar
foreach::%dopar%
?svd
?coef
?lm
?summary
?relist
?read.table
?write
?show
?combn
?pair
?sample
?rep
?mean
?show
?cor
?combn
?labs
library(ggplot2)
?labs
?mean
?median
?element_text
?combn
?colorRamp
?E
?E(g)
?rgb
?degrees
library(igraph)
?degrees
igraph::degrees
?table
?intersect
?write.table
?ls
?dev.off
?lines
?points
?legend
?runif
?png
?dev.off
?dev.off
?as.dendrogram
?dbinom
list(d1=c("g1","g2","g3"))
foo<-list(d1=c("g1","g2","g3"))
foo$d1
paste(foo$d1,collapse=T)
?paste
paste(foo$d1)
paste(foo$d1,collapse=" ")
paste(foo$d1,collapse=",")
paste(c(),collapse=",")
paste(NULL,collapse=",")
sapply(foo,function(x) paste(x[!names(x)%in%x)],collapse=","))
sapply(foo,function(x) paste(x[!names(x)%in%x],collapse=","))
foo<-list(g1=c("g1","g2","g3"))
sapply(foo,function(x) paste(x[!names(x)%in%x],collapse=","))
sapply(foo,function(x) paste(x[!x%in%names(x)],collapse=","))
foo$g1
names(foo$g1)
rownames(foo$g1)
names(foo$g1[])
names(foo$g1[[]])
names(foo)
foo
foo<- list(g1=c("g1","g2","g3"),g2=c("g1","g2","g3"))
c <- 0
chr <- c()
for (x in foo){
c <- c+1
val <- paste(x[!x%in%names(foo)[c]],collapse=",")
chr <- c(chr,val)
}
chr
as.dataframe(chr)
as.data.frame(chr)
foo<- list(g1=c("g1","g2","g3"),g2=c("g1","g2","g3"),g3=c("g3"))
c <- 0
chr <- c()
for (x in foo){
c <- c+1
val <- paste(x[!x%in%names(foo)[c]],collapse=",")
chr <- c(chr,val)
}
chr
as.data.frame(chr)
sapply(chr,function(x) if (x=="") "-" else x)
foo23<-sapply(chr,function(x) if (x=="") "-" else x)
names(foo23)
devtools::check(document = T)
devtools::check(document = T)
devtools::check(document = T)
devtools::check(document = T)
devtools::check(document = T)
devtools::check(document = T)
devtools::load_all(".")
library(TraRe)
library(TraRe)
devtools::check(document = T)
?sleuth
library('pachterlab/sleuth')
library(sleuth)
?sleuth
help(package = 'sleuth')
?sleuth_prep
library(tximport)
?tximport
devtools::check(document = FALSE)
devtools::check(document = T)
devtools::check(document = T)
devtools::check(document = T)
devtools::check(document = T)
devtools::check(document = T)
?read.table
devtools::check(document = T)
usethis::use_mit_license()
?usethis::use_mit_license
?usethis::find_name()
?find_name()
?write.table
use_mit_license()
?use_mit_license()
?usethis::use_mit_license()
usethis::use_mit_license(name="Mikel Hernaez ; Charles Blatti ; Jesus de la Fuente")
devtools::check(document = T)
?show
?write.table
devtools::check(document = T)
devtools::check(document = T)
devtools::check(document = T)
library(TraRe)
?TraRe
?generatecliques
?runlinker
?LINKER_run
?runrewiring
?preparerewiring
devtools::install_github(repo="ubioinformat/TraRe",auth_token="6422252a3bb73e02103575f85c555393a01b74aa")
library(TraRe)
?TraRe
?TraRe
library(TraRe)
?TraRe
library(TraRe)
?LINKER_run
?readMat
pathfile="D:/COPIA SEGURIDAD JESUS DE LA FUENTE CEDEÃ‘O/ASIGNATURAS/PFMIdoia/TeleTrabajo/DataSets/MayoClinic/LINKER"
########## Load the gene pathways for the enrichment analysis ##############################
GENESETDB_Collections_GeneSymbol_v11<-R.matlab::readMat(paste(pathfile,"/GENESETDB_Collections_GeneSymbol_v11.mat",sep=""))
pathway_genes<-list()
for(struct_idx in 1:length(GENESETDB_Collections_GeneSymbol_v11$GENESETDB.Collections))
{
struct_matrix<-GENESETDB_Collections_GeneSymbol_v11$GENESETDB.Collections[[struct_idx]][[1]][[1]]
struct_geneList<-GENESETDB_Collections_GeneSymbol_v11$GENESETDB.Collections[[struct_idx]][[1]][[2]]
struct_pathways<-GENESETDB_Collections_GeneSymbol_v11$GENESETDB.Collections[[struct_idx]][[1]][[3]]
pathway_genes[[struct_idx]]<-list()
for(geneSet_idx in 1:length(struct_pathways)){
pathway_genes[[struct_idx]][[struct_pathways[[geneSet_idx]][[1]][1]]]<-sapply(which(struct_matrix[,geneSet_idx]==1), function(x) struct_geneList[[x]][[1]][1])
}
}
rm(struct_matrix, struct_geneList, struct_pathways, GENESETDB_Collections_GeneSymbol_v11)
?LINKER_run
getwd()
devtools::load_all(".")
library(TraRe)
library(TraRe)
library(TraRe)
devtools::check(document = T)
