hey <- list()
stats
}
allstats
class(c("1",2))
fl<-c("1",2)
fl[2]+2
fl[2]
library(TraRe)
wp <- "D:/COPIA SEGURIDAD JESUS DE LA FUENTE CEDEÃ‘O/ASIGNATURAS/PFMIdoia/TeleTrabajo/Scripts/Flugaza/inputs/rewiringinputs/onlysick/"
expressionpath <- paste0(wp,'expression/flugaza_counts_norm.txt')
geneinfopath <- paste0(wp,'geneinfo/flugaza_geneinfo.txt')
clinicalpath <- paste0(wp,'clinicalfiles/clinicalFav_Sx.txt')
linkerpath <- paste0(wp,'linker/flugaza_linker_output.rds')
preparedobject<-preparerewiring(name="Favorable - Survival",
linker_saved_file = linkerpath,
expr_matrix_file = expressionpath,
gene_info_file = geneinfopath,
phenotype_file = clinicalpath,
final_signif_thresh = 0.05)
foo<-runrewiring(preparedobject)
dim(foo)
foo[1,1]
foo[1,2]
foo[1,3]
foo[1,4]
foo[1,5]
foo[1,6]
foo[1,7]
foo[1,8]
foo[1,9]
foo[1,10]
foo[1,11]
foo[1,12]
statsnames <- c("module-method", "module-index", "orig-pval",
"revised-pvalue", "num-targets", "num-regulators",
"regulator-names","target-names", "num-samples", "num-genes",
"num-class1", "num-class2")
dim(foo)
allstats<-foo
colnames(allstats) <- statsnames
rownames(allstats) <- allstats[, "module-index"]
allstats[, "orig-pval"] <- signif(as.numeric(allstats[, "orig-pval"]), 3)
allstats[, "revised-pvalue"] <- signif(as.numeric(allstats[, "revised-pvalue"]), 3)
# calculate overlap between signif mod sets
fisher_tbl <- NULL
fisher_cols <- c("user_gene_set", "property_gene_set", "universe_count",
"user_count", "property_count", "overlap_count", "pval")
universe_size<-length(rownames(preparedobject$datasets[[1]]$norm_expr_mat_keep))
`%dopar%` <- foreach::`%dopar%`
allstats <-foreach::foreach(mymod = seq_len(5),.combine = c,.init=0 %dopar% {
stats <- stats +1
hola <- "hey"
wow <- 3
hey <- list()
stats
}
`%dopar%` <- foreach::`%dopar%`
allstats <-foreach::foreach(mymod = seq_len(5),.combine = c,.init=0) %dopar% {
stats <- stats +1
hola <- "hey"
wow <- 3
hey <- list()
stats
}
`%dopar%` <- foreach::`%dopar%`
stats <- 0
allstats <-foreach::foreach(mymod = seq_len(5),.combine = c,.init=0) %dopar% {
stats <- stats +1
hola <- "hey"
wow <- 3
hey <- list()
stats
}
allstats
`%dopar%` <- foreach::`%dopar%`
stats <- 0
allstats <-foreach::foreach(mymod = seq_len(5),.combine = +,.init=0) %dopar% {
stats <- stats +1
hola <- "hey"
wow <- 3
hey <- list()
stats
}
`%dopar%` <- foreach::`%dopar%`
stats <- 0
allstats <-foreach::foreach(mymod = seq_len(5),.init=0) %dopar% {
stats <- stats +1
hola <- "hey"
wow <- 3
hey <- list()
stats
}
`%dopar%` <- foreach::`%dopar%`
stats <- 0
allstats <-foreach::foreach(mymod = seq_len(5)) %dopar% {
stats <- stats +1
hola <- "hey"
wow <- 3
hey <- list()
stats
}
allstats
?foreach::foreach
`%dopar%` <- foreach::`%dopar%`
stats <- 0
allstats <-foreach::foreach(mymod = seq_len(5),.combine = '+',.init=0) %dopar% {
stats <- stats +1
hola <- "hey"
wow <- 3
hey <- list()
stats
}
stats
`%dopar%` <- foreach::`%dopar%`
stats <- 0
allstats <-foreach::foreach(mymod = seq_len(5),.combine = '+',.init=0) %dopar% {
hola <- "hey"
wow <- 3
hey <- list()
stats+1
}
allstats
`%dopar%` <- foreach::`%dopar%`
stats <- 0
allstats <-foreach::foreach(mymod = seq_len(5),.combine = c,.init=list()) %dopar% {
stats <- stats+1
wow <- 3
hey <- list()
list(hey=stats)
}
allstats$hey
`%dopar%` <- foreach::`%dopar%`
stats <- 0
allstats <-foreach::foreach(mymod = seq_len(5),.combine = cbind,.init=list()) %dopar% {
stats <- stats+1
wow <- 3
hey <- list()
list(hey=stats)
}
allstats
list(3,5,6)
cbind(list(3,5,6),list(2,3,1))
?do.call
`%dopar%` <- foreach::`%dopar%`
stats <- 0
allstats <-foreach::foreach(mymod = seq_len(5),.combine = cbind,.init=list()) %dopar% {
stats <- stats+1
list(mymod=stats)
}
allstats
`%dopar%` <- foreach::`%dopar%`
stats <- 0
allstats <-foreach::foreach(mymod = seq_len(5),.combine = c,.init=list()) %dopar% {
stats <- stats+1
list(mymod=stats)
}
allstats$mymod
`%dopar%` <- foreach::`%dopar%`
stats <- 0
allstats <-foreach::foreach(mymod = seq_len(5),.combine = rbind,.init=list()) %dopar% {
list(mymod="stats")
}
allstats
`%dopar%` <- foreach::`%dopar%`
stats <- 0
allstats <-foreach::foreach(mymod = seq_len(5),.combine = list(),.init=list()) %dopar% {
list(mymod="stats")
}
`%dopar%` <- foreach::`%dopar%`
stats <- 0
allstats <-foreach::foreach(mymod = seq_len(5),.combine = list,.init=list()) %dopar% {
list(mymod="stats")
}
allstas
allstats
allstats
length(allstats)
install.packages("ggplot2")
install.packages("purrr")
install.packages("RVenn")
install.packages("eulerr")
install.packages("biomaRt")
install.packages("BiocManager")
BiocManager::install("biomaRt")
install.packages("R.matlab")
install.packages("colorspace")
library(TraRe)
?do.call
matrix(1:9,3,3)
list(hey=matrix(1:9,3,3),hh=list())
ff<-list(hey=matrix(1:9,3,3),hh=list())
foo<-hash::hash()
ff<-list(hey=matrix(1:9,3,3),hh=foo)
ff$hh
ff$hh[[1]]<-3
ff$hh[['yei']]<-3
ff$hh$yei
ff<-list(hey=matrix(1:9,3,3),hh=ff)
ff$hh$hh$yei
?toString
foo <- hash::hash()
allstats <-foreach::foreach(mymod = seq_len(5),.combine = rbind,.init=NULL) %dopar% {
foo[[toString(mymod)]]<-mymod
foo
}
foo <- hash::hash()
`%dopar%` <- foreach::`%dopar%`
allstats <-foreach::foreach(mymod = seq_len(5),.combine = rbind,.init=NULL) %dopar% {
foo[[toString(mymod)]]<-mymod
foo
}
foo <- hash::hash()
doParallel::registerDoParallel(3)
`%dopar%` <- foreach::`%dopar%`
allstats <-foreach::foreach(mymod = seq_len(5),.combine = rbind,.init=NULL) %dopar% {
foo[[toString(mymod)]]<-mymod
foo
}
foo <- hash::hash()
doParallel::registerDoParallel(3)
`%dopar%` <- foreach::`%dopar%`
allstats <-foreach::foreach(mymod = seq_len(5)) %dopar% {
foo[[toString(mymod)]]<-mymod
foo
}
allstats
?cbind
foo <- hash::hash()
doParallel::registerDoParallel(3)
`%dopar%` <- foreach::`%dopar%`
allstats <-foreach::foreach(mymod = seq_len(5),.combine = cbind2) %dopar% {
foo[[toString(mymod)]]<-mymod
foo
}
allstats
foo <- hash::hash()
doParallel::registerDoParallel(3)
`%dopar%` <- foreach::`%dopar%`
allstats <-foreach::foreach(mymod = seq_len(5),.combine = rowbind2) %dopar% {
foo[[toString(mymod)]]<-mymod
foo
}
foo <- hash::hash()
doParallel::registerDoParallel(3)
`%dopar%` <- foreach::`%dopar%`
allstats <-foreach::foreach(mymod = seq_len(5),.combine = rbind2) %dopar% {
foo[[toString(mymod)]]<-mymod
foo
}
foo <- hash::hash()
doParallel::registerDoParallel(3)
`%dopar%` <- foreach::`%dopar%`
allstats <-foreach::foreach(mymod = seq_len(5),.combine = cbind2) %dopar% {
foo[[toString(mymod)]]<-mymod
foo
}
class(foo)
allstats <-foreach::foreach(mymod = seq_len(5),.combine = cbind,.init = list(list(),list())) %dopar% {
list(toString(mymod)=mymod,3)
}
list('hey'=4)
list(3,4)
allstats <-foreach::foreach(mymod = seq_len(5),.combine = cbind,.init = list(list(),list())) %dopar% {
list(mymod,3)
}
allstats
allstats <-foreach::foreach(mymod = seq_len(5),.combine = cbind,.init = list(list(),list())) %dopar% {
list(matrix(seq_len(9),3,3),3)
}
allstats
matrix(seq_len(9),3,3
)
x <- foreach(i=1:4, .combine=function(a,b) cbind(a,b)) %do% rnorm(4)
x <- foreach(i=1:4, .combine=function(a,b) cbind(a,b)) %dopar% rnorm(4)
x <- foreach::foreach(i=1:4, .combine=function(a,b) cbind(a,b)) %dopar% rnorm(4)
x
ll <- function(a,b){
return(cbind(c(a[1]+a[2],a[3]+a[4]),c(b[1]+b[2],b[3]+b[4])))
}
x <- foreach::foreach(i=1:4, .combine=ll) %dopar% rnorm(4)
x
x <- foreach::foreach(i=1:4, .combine=ll) %dopar% c(1,2,3,4)
x
x <- foreach::foreach(i=1:2, .combine=ll) %dopar% c(1,2,3,4)
x
x <- foreach::foreach(i=1:3, .combine=ll) %dopar% c(1,2,3,4)
x
x <- foreach::foreach(i=1:3, .combine=cbind) %dopar% c(1,2,3,4)
x
x <- foreach::foreach(i=1:3, .combine=function(a,b) cbind(a,b)) %dopar% c(1,2,3,4)
x
x <- foreach::foreach(i=1:3, .combine=ll) %dopar% c(1,2,3,4)
x
ll <- function(a,b){
cbind(sum(a),sum(b))
}
x <- foreach::foreach(i=1:3, .combine=ll) %dopar% c(1,2,3,4)
x
x <- foreach::foreach(i=1:4, .combine=ll) %dopar% c(1,2,3,4)
x
x <- foreach::foreach(i=1:4, .combine=function(a,b) cbind(a,b)) %dopar% c(1,2,3,4)
x
x <- foreach::foreach(i=1:4, .combine=function(a,b) cbind(sum(a),sum(b))) %dopar% c(1,2,3,4)
x
?foreach::foreach
results <- new.env()
results$val <- 0
x <- foreach::foreach(i=1:4,.combine=rbind) %dopar% {
results$val <- results$val+i
return (c(1,2,3,4))
}
results$val
results <- new.env()
results$val <- 0
x <- foreach::foreach(i=1:4) %dopar% {
return (c(1,2),results$val+i)
}
results <- new.env()
results$val <- 0
x <- foreach::foreach(i=1:4) %dopar% {
c(1,2),results$val+i
}
x <- foreach::foreach(i=1:4) %dopar% {
list(c(1,2),i)
}
x
x[[1]][[1]]
x[[1]][[2]]
x <- foreach::foreach(i=1:4,.combine = c) %dopar% {
list(c(1,2),i)
}
x
x <- foreach::foreach(i=1:4,.combine = c) %dopar% {
list(c(1,2,3,4,5,6),list(hey=i))
}
x
?seq_len
seq(1,10,2)
x <- foreach::foreach(i=1:10,.combine = c) %dopar% {
list(c(1,2,3,4,5,6),list(hey=i))
}
x[1]
x[[1]]
x
matt <- do.call(rbind,x[seq_len(1,20,2)])
seq(1,20,2)
matt <- do.call(rbind,x[seq(1,20,2)])
matt
x[2]
x[[2]]
names(x[[2]])
ls(x[[2]])
values(x[[2]])
unlist(x[[2]])
unname(x[[2]])
class(unname(x[[2]]))
unlist(x[[2]])
class(unlist(x[[2]]))
foohash <- do.call(function(y) foo[[names(y)]]<-unlist(y),x[seq(2,20,2)])
foo
for (i in seq(2,20,2)){
foo[[names(x[[i]])]]<-unlist(x[[i]])
}
foo
lll<-list(1,c(2,3,4))
lll[[1]]
lll[[2]]
library(TraRe)
library(TraRe)
wp <- "C:/Users/Jesus/OneDrive - alumni.unav.es/Documents/Flugaza/inputs/rewiringinputs/onlysick/"
expressionpath <- paste0(wp,'expression/flugaza_counts_norm.txt')
geneinfopath <- paste0(wp,'geneinfo/flugaza_geneinfo.txt')
clinicalpath <- paste0(wp,'clinicalfiles/clinicalFav_Sx.txt')
linkerpath <- paste0(wp,'linker/flugaza_linker_output.rds')
preparedobject<-preparerewiring(name="Favorable - Survival",
linker_saved_file = linkerpath,
expr_matrix_file = expressionpath,
gene_info_file = geneinfopath,
phenotype_file = clinicalpath,
final_signif_thresh = 0.05)
foo<-runrewiring(preparedobject)
dim(foo)
length(foo)
foo[1]
foo[[1]]
length(foo)
foo[[[1]]]
foo[[1]]
foo[[1]][[1]]
foo[[1]]
list(3,NULL)
doParallel::registerDoParallel(3)
`%dopar%` <- foreach::`%dopar%`
ff <- foreach::foreach(i=seq_len(5)) %dopar% {
list(c(1,2,3,4),list(2,3))
}
length(ff)
length(ff[[1]])
f[1]
ff[1]
ff[[1]]
ff[[1]][[1]]
ff[[1]][[2]]
ff[[1]][[2]][[1]]
allstats<-c()
hh <- hash::hash()
for (x in foo){
allstats<-rbind(allstats,x[[1]])
hh[[x[[2]][[1]]]]<-x[[2]][[2]]
}
allstats
library(TraRe)
getwd()
wp <- "C:/Users/Jesus/OneDrive - alumni.unav.es/Documents/Flugaza/inputs/rewiringinputs/onlysick/"
expressionpath <- paste0(wp,'expression/flugaza_counts_norm.txt')
geneinfopath <- paste0(wp,'geneinfo/flugaza_geneinfo.txt')
clinicalpath <- paste0(wp,'clinicalfiles/clinicalFav_Sx.txt')
linkerpath <- paste0(wp,'linker/flugaza_linker_output.rds')
preparedobject<-preparerewiring(name="Favorable - Survival",
linker_saved_file = linkerpath,
expr_matrix_file = expressionpath,
gene_info_file = geneinfopath,
phenotype_file = clinicalpath,
final_signif_thresh = 0.05)
runrewiring(preparedobject)
ll<-list()
is.null(ll)
library(TraRe)
dev.off()
wp <- "C:/Users/Jesus/OneDrive - alumni.unav.es/Documents/Flugaza/inputs/rewiringinputs/onlysick/"
expressionpath <- paste0(wp,'expression/flugaza_counts_norm.txt')
geneinfopath <- paste0(wp,'geneinfo/flugaza_geneinfo.txt')
clinicalpath <- paste0(wp,'clinicalfiles/clinicalFav_Sx.txt')
linkerpath <- paste0(wp,'linker/flugaza_linker_output.rds')
preparedobject<-preparerewiring(name="Favorable - Survival",
linker_saved_file = linkerpath,
expr_matrix_file = expressionpath,
gene_info_file = geneinfopath,
phenotype_file = clinicalpath,
final_signif_thresh = 0.05)
runrewiring(preparedobject)
warnings()
library(TraRe)
wp <- "C:/Users/Jesus/OneDrive - alumni.unav.es/Documents/Flugaza/inputs/rewiringinputs/onlysick/"
expressionpath <- paste0(wp,'expression/flugaza_counts_norm.txt')
geneinfopath <- paste0(wp,'geneinfo/flugaza_geneinfo.txt')
clinicalpath <- paste0(wp,'clinicalfiles/clinicalFav_Sx.txt')
linkerpath <- paste0(wp,'linker/flugaza_linker_output.rds')
preparedobject<-preparerewiring(name="Favorable - Survival",
linker_saved_file = linkerpath,
expr_matrix_file = expressionpath,
gene_info_file = geneinfopath,
phenotype_file = clinicalpath,
final_signif_thresh = 0.05)
runrewiring(preparedobject)
library(TraRe)
wp <- "C:/Users/Jesus/OneDrive - alumni.unav.es/Documents/Flugaza/inputs/rewiringinputs/onlysick/"
expressionpath <- paste0(wp,'expression/flugaza_counts_norm.txt')
geneinfopath <- paste0(wp,'geneinfo/flugaza_geneinfo.txt')
clinicalpath <- paste0(wp,'clinicalfiles/clinicalFav_Sx.txt')
linkerpath <- paste0(wp,'linker/flugaza_linker_output.rds')
preparedobject<-preparerewiring(name="Favorable - Survival",
linker_saved_file = linkerpath,
expr_matrix_file = expressionpath,
gene_info_file = geneinfopath,
phenotype_file = clinicalpath,
final_signif_thresh = 0.05)
runrewiring(preparedobject)
?readRDS
ff<-readRDS(file="C:/Users/Jesus/Downloads/PROMOTE.rds")
ff
library(TraRe)
wp <- "C:/Users/Jesus/OneDrive - alumni.unav.es/Documents/Flugaza/inputs/rewiringinputs/onlysick/"
expressionpath <- paste0(wp,'expression/flugaza_counts_norm.txt')
geneinfopath <- paste0(wp,'geneinfo/flugaza_geneinfo.txt')
clinicalpath <- paste0(wp,'clinicalfiles/clinicalFav_Sx.txt')
linkerpath <- paste0(wp,'linker/flugaza_linker_output.rds')
preparedobject<-preparerewiring(name="Favorable - Survival",
linker_saved_file = linkerpath,
expr_matrix_file = expressionpath,
gene_info_file = geneinfopath,
phenotype_file = clinicalpath,
final_signif_thresh = 0.05)
runrewiring(preparedobject)
?show
library(TraRe)
wp <- "C:/Users/Jesus/OneDrive - alumni.unav.es/Documents/Flugaza/inputs/rewiringinputs/onlysick/"
expressionpath <- paste0(wp,'expression/flugaza_counts_norm.txt')
geneinfopath <- paste0(wp,'geneinfo/flugaza_geneinfo.txt')
clinicalpath <- paste0(wp,'clinicalfiles/clinicalFav_Sx.txt')
linkerpath <- paste0(wp,'linker/flugaza_linker_output.rds')
preparedobject<-preparerewiring(name="Favorable - Survival",
linker_saved_file = linkerpath,
expr_matrix_file = expressionpath,
gene_info_file = geneinfopath,
phenotype_file = clinicalpath,
final_signif_thresh = 0.05)
runrewiring(preparedobject)
library(TraRe)
wp <- "C:/Users/Jesus/OneDrive - alumni.unav.es/Documents/Flugaza/inputs/rewiringinputs/onlysick/"
expressionpath <- paste0(wp,'expression/flugaza_counts_norm.txt')
geneinfopath <- paste0(wp,'geneinfo/flugaza_geneinfo.txt')
clinicalpath <- paste0(wp,'clinicalfiles/clinicalFav_Sx.txt')
linkerpath <- paste0(wp,'linker/flugaza_linker_output.rds')
preparedobject<-preparerewiring(name="Favorable - Survival",
linker_saved_file = linkerpath,
expr_matrix_file = expressionpath,
gene_info_file = geneinfopath,
phenotype_file = clinicalpath,
final_signif_thresh = 0.05)
runrewiring(preparedobject)
