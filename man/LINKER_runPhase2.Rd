% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/linker_runphasetwo.R
\name{LINKER_runPhase2}
\alias{LINKER_runPhase2}
\title{Phase II : bipartitive graphs generation}
\usage{
LINKER_runPhase2(
  modules,
  Data,
  NrCores,
  mode = "VBSR",
  alpha = 1 - 1e-06,
  FDR = 0.05
)
}
\arguments{
\item{modules}{Modules obtained from the phase I linker output.}

\item{Data}{Matrix of log-normalized estimated counts of the gene expression
data (Nr Genes x Nr samples)}

\item{NrCores}{Nr of computer cores for the parallel parts of the method. Note that the parallelization
is NOT initialized in any of the functions. By default, 2.}

\item{mode}{Chosen method(s) to link module eigengenes to regulators. The available options are
'VBSR', 'LASSOmin', 'LASSO1se' and 'LM'. By default, all methods are chosen.}

\item{alpha}{alpha parameter if a LASSO model is chosen.}

\item{FDR}{The False Discovery Rate correction used for the modules and graphs GRN uncovering. By default, 0.05.}
}
\value{
igraph object containing the related drivers and targets in the form of a bipartitive graph.
}
\description{
Run second phase of the linker method where a bipartitive graph is generated from the phase I output.
A bipartite graph is a set of graph nodes decomposed into two disjoint sets such that no
two graph nodes within the same set are adjacent.
}
\examples{

   ## We are going to proceed in the same manner as in the `liner_runphaseone()` example
   ## but we start at the end of it, loading the output from the example folder.

   phaseone <- readRDS(paste0(system.file('extdata',package='TraRe'),
                              '/linker_phaseone_example.rds'))

   ## We are loading drivers and targets to generate lognorm_est_counts, as we need it
   ## for the phase 2.

   drivers <- readRDS(paste0(system.file('extdata',package='TraRe'),
                                         '/tfs_linker_example.rds'))
   targets <- readRDS(paste0(system.file('extdata',package='TraRe'),
                                         '/targets_linker_example.rds'))

   lognorm_est_counts <- as.matrix(rbind(drivers,targets))

   ## Now we proceed to call `LINKER_runPhase2()`.
   ## We first, we need to extract modules from the `LINKER_runPhase1()` output.

   modules_phaseone<-LINKER_extract_modules(phaseone)

   ## Now we generate the bipartitive graph from the extracted modules


   graph <- LINKER_runPhase2(modules=modules_phaseone,Data=lognorm_est_counts,
                             NrCores=1,mode='LM')


}
