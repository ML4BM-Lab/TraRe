% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/linker_runlinker.R
\name{LINKER_run}
\alias{LINKER_run}
\title{GRN inference via selected model.}
\usage{
LINKER_run(
  TraReObj,
  link_mode = c("VBSR", "LASSOmin", "LASSO1se", "LM"),
  graph_mode = c("VBSR", "LASSOmin", "LASSO1se", "LM"),
  module_rep = "MEAN",
  NrModules = 100,
  corrClustNrIter = 100,
  Nr_bootstraps = 10,
  FDR = 0.05,
  Lambda = 5,
  NrCores = 1,
  train_size = 0.8,
  onlymods = FALSE,
  only_train = FALSE
)
}
\arguments{
\item{TraReObj}{TraReObj containing preprocessed input matrix, linker_preprocessing output.}

\item{link_mode}{Chosen method(s) to link module eigengenes to regulators. The available options are
'VBSR', 'LASSOmin', 'LASSO1se' and 'LM'. By default, all methods are chosen.}

\item{graph_mode}{Chosen method(s) to generate the edges in the bipartite graph. The available options
are 'VBSR', 'LASSOmin', 'LASSO1se' and 'LM'. By default, all methods are chosen.}

\item{module_rep}{Method selected for use. Default set to MEAN.}

\item{NrModules}{Number of modules that are a priori to be found (note that the final number of modules
discovered may differ from this value). By default, 100 modules.}

\item{corrClustNrIter}{output from preparedata(). By default, 100.}

\item{Nr_bootstraps}{Number of bootstrap of Phase I. By default, 10.}

\item{FDR}{The False Discovery Rate correction used for the modules and graphs GRN uncovering. By default, 0.05.}

\item{Lambda}{Lambda variable for Lasso models.}

\item{NrCores}{Nr of computer cores for the parallel parts of the method. Note that the parallelization
is NOT initialized in any of the functions. By default, 2.}

\item{train_size}{Fraction of samples selected for the train samples. Default: 0.8.}

\item{onlymods}{Whether to infer only modules or modules and graphs. Default: FALSE}

\item{only_train}{whether to use only training samples within LINKER run. Default: FALSE}
}
\value{
List containing the GRN raw results, GRN modules and GRN graphs.
}
\description{
Gene Regulatory Network inference via model selection. Consists of two phases,
\code{LINKER_runPhase1()} and \code{LINKER_runPhase2()}. Help them for more information.
}
\examples{

  ## For this example, we are going to load a example matrix
  lognorm_est_counts_p <- paste0(system.file('extdata',package='TraRe'),
                                 '/expression_rewiring_example.txt')
  lognorm_est_counts <- read.delim(lognorm_est_counts_p, header=TRUE,row.names=1)

  ## Load gene info, its an array of regulators' names.
  gene_info_p <- paste0(system.file('extdata',package='TraRe'),
                         '/geneinfo_rewiring_example.txt')
  gene_info <- read.delim(gene_info_p,header=TRUE)
  geneinfo <- gene_info[gene_info[,'regulator'] == 1,'uniq_isos']

   ##TraReObj <- trare_preprocessing(data_matrix = lognorm_est_counts,
   ##                                  geneinfo = rownames(drivers), verbose = FALSE)

   ## TraReObj <- LINKER_run(TraReObj = TraReObj, link_mode='VBSR',
   ##                        graph_mode='VBSR',NrModules=100,Nr_bootstraps=10,
   ##                        NrCores=1,corrClustNrIter=100)

}
