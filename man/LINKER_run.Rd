% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/linker_runlinker.R
\name{LINKER_run}
\alias{LINKER_run}
\title{GRN inference via selected model.}
\usage{
LINKER_run(
  lognorm_est_counts,
  target_filtered_idx,
  regulator_filtered_idx,
  nassay = 1,
  regulator = "regulator",
  link_mode = c("VBSR", "LASSOmin", "LASSO1se", "LM"),
  graph_mode = c("VBSR", "LASSOmin", "LASSO1se", "LM"),
  module_rep = "MEAN",
  NrModules = 100,
  corrClustNrIter = 100,
  Nr_bootstraps = 10,
  FDR = 0.05,
  Lambda = 5,
  NrCores = 1,
  onlymods = FALSE,
  only_train = FALSE
)
}
\arguments{
\item{lognorm_est_counts}{Matrix of log-normalized estimated counts of the gene expression
data (Nr Genes x Nr samples) or SummarizedExperiment object.}

\item{target_filtered_idx}{Index array of the target genes on the lognorm_est_counts matrix if
SummarizedExperiment object is not provided.}

\item{regulator_filtered_idx}{Index array of the regulatory genes on the lognorm_est_counts matrix if
SummarizedExperiment object is not provided.}

\item{nassay}{if SummarizedExperiment object is passed as input to lognorm_est_counts, name of the
assay containing the desired matrix. Default: 1 (first item in assay's list).}

\item{regulator}{if SummarizedExperiment object is passed as input to lognorm_est_counts, name of the
rowData() variable to build target_filtered_idx and regulator_filtered_idx. This variable must be one
for driver genes and zero for target genes. Default: 'regulator'}

\item{link_mode}{Chosen method(s) to link module eigengenes to regulators. The available options are
'VBSR', 'LASSOmin', 'LASSO1se' and 'LM'. By default, all methods are chosen.}

\item{graph_mode}{Chosen method(s) to generate the edges in the bipartite graph. The available options
are 'VBSR', 'LASSOmin', 'LASSO1se' and 'LM'. By default, all methods are chosen.}

\item{module_rep}{Method selected for use. Default set to MEAN.}

\item{NrModules}{Number of modules that are a priori to be found (note that the final number of modules
discovered may differ from this value). By default, 100 modules.}

\item{corrClustNrIter}{output from preparedata(). By default, 100.}

\item{Nr_bootstraps}{Number of bootstrap of Phase I. By default, 10.}

\item{FDR}{The False Discovery Rate correction used for the modules and graphs GRN uncovering. By default, 0.05.}

\item{Lambda}{Lambda variable for Lasso models.}

\item{NrCores}{Nr of computer cores for the parallel parts of the method. Note that the parallelization
is NOT initialized in any of the functions. By default, 2.}

\item{onlymods}{Whether to infer only modules or modules and graphs. Default: FALSE}

\item{only_train}{whether to use only training samples within LINKER run. Default: FALSE}
}
\value{
List containing the GRN raw results, GRN modules and GRN graphs.
}
\description{
Gene Regulatory Network inference via model selection. Consists of two phases,
\code{LINKER_runPhase1()} and \code{LINKER_runPhase2()}. Help them for more information.
}
\examples{
   ## For this example, we are going to join 60 drivers and
   ## 200 targets genes from the example folder.

   drivers <- readRDS(paste0(system.file('extdata',package='TraRe'),'/tfs_linker_example.rds'))
   targets <- readRDS(paste0(system.file('extdata',package='TraRe'),'/targets_linker_example.rds'))

   lognorm_est_counts <- as.matrix(rbind(drivers,targets))

   ## We create the index for drivers and targets in the log-normalized gene expression matrix.

   R<-60
   T<-200

   regulator_filtered_idx <- seq_len(R)
   target_filtered_idx <- R+c(seq_len(T))


   ## We recommend to use the default values of the function.
   ## For the sake of time, we will select faster (and worse) ones.

   linkeroutput <- LINKER_run(lognorm_est_counts,target_filtered_idx=target_filtered_idx,
                              regulator_filtered_idx=regulator_filtered_idx,
                              link_mode='LASSOmin',graph_mode='LM',NrModules=5,Nr_bootstraps=1,
                               NrCores=2,corrClustNrIter=10)



}
